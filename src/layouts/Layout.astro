---
import '../styles/global.css';
import Navbar2 from '../components/HomePageComponents/Navbar2.astro';
import Footer from '../components/HomePageComponents/Footer.astro';

interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body class="bg-white min-h-screen">
        <Navbar2 
            companyName="WOLF CONSTRUCTION LIMITED"
            email="office@wolfconstruction.co.nz"
            phone="021 023 49527"
        />
        <main>
            <slot />
        </main>
        <Footer />
        <script>
            function initializeAnimations() {
                // Force scroll to top
                window.scrollTo(0, 0);
                
                // Initialize all scroll-animate-up elements
                const elements = document.querySelectorAll('.scroll-animate-up');
                elements.forEach(element => {
                    // Remove any existing animation classes
                    element.classList.remove('init', 'visible', 'in-view');
                    
                    // Set initial state
                    element.classList.add('init');
                    
                    // Check if element is in viewport
                    const rect = element.getBoundingClientRect();
                    if (rect.top < window.innerHeight) {
                        // Add visible class after a small delay to ensure smooth animation
                        setTimeout(() => {
                            element.classList.add('visible', 'in-view');
                        }, 100);
                    }
                });

                // Set up intersection observer for scroll animations
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add('visible', 'in-view');
                        }
                    });
                }, {
                    root: null,
                    rootMargin: '10px',
                    threshold: 0.1
                });

                // Start observing all scroll-animate-up elements except footer
                elements.forEach(element => {
                    if (!element.matches('footer')) {
                        observer.observe(element);
                    }
                });

                // Ensure footer is always visible
                const footer = document.querySelector('footer');
                if (footer) {
                    footer.style.opacity = '1';
                    footer.style.transform = 'translateY(0)';
                }
            }

            // Initialize on first page load
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', initializeAnimations);
            } else {
                initializeAnimations();
            }

            // Also initialize after full load (helps Safari render on first paint)
            window.addEventListener('load', () => {
                requestAnimationFrame(() => {
                    initializeAnimations();
                    // Fallback re-checks to handle iOS Safari paint timing
                    setTimeout(initializeAnimations, 200);
                    setTimeout(initializeAnimations, 400);
                });
            });

            // Above-the-fold reveal fallback (no visual change)
            function revealAboveTheFold() {
                const candidates = document.querySelectorAll('.scroll-animate-up:not(.visible)');
                candidates.forEach((node) => {
                    const element = node instanceof HTMLElement ? node : null;
                    if (!element) return;
                    const rect = element.getBoundingClientRect();
                    if (rect.bottom > 0 && rect.top < window.innerHeight) {
                        element.classList.add('visible', 'in-view');
                    }
                });
            }

            const scheduleReveal = () => {
                requestAnimationFrame(() => {
                    requestAnimationFrame(() => {
                        revealAboveTheFold();
                        setTimeout(revealAboveTheFold, 120);
                    });
                });
            };

            // Run reveal on load and key lifecycle events (safe, invisible)
            if (document.readyState === 'complete') {
                scheduleReveal();
            } else {
                window.addEventListener('load', scheduleReveal);
            }
            document.addEventListener('astro:page-load', scheduleReveal);
            document.addEventListener('visibilitychange', () => {
                if (document.visibilityState === 'visible') scheduleReveal();
            });
            window.addEventListener('orientationchange', scheduleReveal);
            window.addEventListener('resize', scheduleReveal);

            // Handle Astro page changes
            document.addEventListener('astro:page-load', initializeAnimations);
        </script>
    </body>
</html>

<style is:global>
    /* Ensure proper spacing with fixed navbar */
    main {
        padding-top: 0; /* Navbar2 handles its own spacing */
        min-height: calc(100vh - 200px); /* Account for navbar and footer */
    }

    /* Ensure footer stays at bottom */
    body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    main {
        flex: 1;
    }

    .scroll-animate-up {
        opacity: 0;
        transform: translateY(30px);
        transition: none;
        will-change: transform, opacity;
    }

    .scroll-animate-up.visible {
        opacity: 1;
        transform: translateY(0);
        transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1),
                    transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* Ensure footer is always visible */
    footer.scroll-animate-up {
        opacity: 1 !important;
        transform: translateY(0) !important;
        transition: none !important;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-in {
        opacity: 0;
        animation: fadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .animate-slide-down {
        opacity: 0;
        animation: slideDown 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }
</style> 