---
import Layout from '../layouts/Layout.astro';
import NavBar from '../components/NavBar.astro';
import Footer from '../components/Footer.astro';

// Import images from public directory
const images = [
    {
        src: "/NewMinorDwellingInWestmere-MakingUseOfUnusedSpaceToAddValue.jpg",
        alt: "Minor Dwelling in Westmere",
        title: "Westmere Project",
        description: "Minor Dwelling Addition"
    },
    {
        src: "/WideBoardGarapaDecking-3.jpg",
        alt: "Wide Board Garapa Decking View 3",
        title: "Garapa Decking",
        description: "Wide Board Installation - View 3"
    },
    {
        src: "/WideBoardGarapaDecking-2.jpg",
        alt: "Wide Board Garapa Decking View 2",
        title: "Garapa Decking",
        description: "Wide Board Installation - View 2"
    },
    {
        src: "/WideBoardGarapaDecking-1.jpg",
        alt: "Wide Board Garapa Decking View 1",
        title: "Garapa Decking",
        description: "Wide Board Installation - View 1"
    },
    {
        src: "/WideBoardGarapaDecking.jpg",
        alt: "Wide Board Garapa Decking",
        title: "Garapa Decking",
        description: "Wide Board Installation"
    },
    {
        src: "/NewKwilaDeckInDevonport.jpg",
        alt: "New Kwila Deck in Devonport",
        title: "Devonport",
        description: "Kwila Deck Installation"
    },
    {
        src: "/Simple-Deck-Stairs.jpg",
        alt: "Simple Deck with Stairs",
        title: "Deck Project",
        description: "Simple and Elegant Design"
    },
    {
        src: "/RedBeach-Stairs-Decking-1.jpg",
        alt: "Red Beach Stairs and Decking",
        title: "Red Beach",
        description: "Custom Stairs and Deck"
    },
    {
        src: "/Avondale-Stairs-Deck-2.jpg",
        alt: "Avondale Stairs and Deck View 2",
        title: "Avondale",
        description: "Stairs and Deck - View 2"
    },
    {
        src: "/Waiatarua.jpg",
        alt: "Waiatarua Project",
        title: "Waiatarua",
        description: "Custom Build Project"
    },
    {
        src: "/MinorDwelling.jpg",
        alt: "Minor Dwelling",
        title: "Minor Dwelling",
        description: "Space Optimisation"
    },
    {
        src: "/HappyClientsInAvondale.jpg",
        alt: "Happy Clients in Avondale",
        title: "Avondale",
        description: "Client Satisfaction"
    },
    {
        src: "/Avondale-Stairs-Deck-1.jpg",
        alt: "Avondale Stairs and Deck View 1",
        title: "Avondale",
        description: "Stairs and Deck - View 1"
    },
    {
        src: "/MakingUseOfUnusedSpaceToAddValue1.jpg",
        alt: "Making Use of Unused Space 1",
        title: "Space Utilization",
        description: "Value Addition - View 1"
    },
    {
        src: "/MakingUseOfUnusedSpaceToAddValue.jpg",
        alt: "Making Use of Unused Space",
        title: "Space Utilization",
        description: "Value Addition"
    },
    {
        src: "/CustomFenceInMountEden.jpg",
        alt: "Custom Fence in Mount Eden",
        title: "Mount Eden",
        description: "Custom Fence Installation"
    },
    {
        src: "/BackyardUpgradeInNewLynn.jpg",
        alt: "Backyard Upgrade in New Lynn",
        title: "New Lynn",
        description: "Complete Backyard Transformation"
    },
    {
        src: "/NewRoofExtensionOverANewDeck.jpg",
        alt: "New Roof Extension Over Deck",
        title: "Roof Extension",
        description: "Integrated Deck Design"
    },
    {
        src: "/After-NewBathroomInNewLynn.jpg",
        alt: "New Bathroom in New Lynn - After",
        title: "New Lynn",
        description: "Modern Bathroom - After"
    },
    {
        src: "/Before-NewBathroomInNewLynn.jpg",
        alt: "New Bathroom in New Lynn - Before",
        title: "New Lynn",
        description: "Bathroom - Before"
    },
    {
        src: "/After-MountEden.jpg",
        alt: "Mount Eden Project - After",
        title: "Mount Eden",
        description: "After Renovation"
    },
    {
        src: "/Before-MountEden.jpg",
        alt: "Mount Eden Project - Before",
        title: "Mount Eden",
        description: "Before Renovation"
    },
    {
        src: "/HouseInPlace.jpg",
        alt: "House in Place",
        title: "House Installation",
        description: "Final Positioning"
    },
    {
        src: "/HouseBeingLiftedOntoOurPoleFoundations.jpg",
        alt: "House Being Lifted Onto Pole Foundations",
        title: "House Installation",
        description: "Lifting Process"
    },
    {
        src: "/PoleFoundationsToLiftAHouseOnto.jpg",
        alt: "Pole Foundations",
        title: "Foundation Work",
        description: "Pole Installation"
    },
    {
        src: "/AfterRenovation.jpg",
        alt: "After Renovation",
        title: "Renovation",
        description: "Completed Project"
    },
    {
        src: "/BeforeRenovation.jpg",
        alt: "Before Renovation",
        title: "Renovation",
        description: "Initial State"
    },
    {
        src: "/AfterAlumniumFence.jpg",
        alt: "After Aluminum Fence Installation",
        title: "Aluminum Fence",
        description: "After Installation"
    },
    {
        src: "/BeforeAlumniumFence.jpg",
        alt: "Before Aluminum Fence Installation",
        title: "Aluminum Fence",
        description: "Before Installation"
    },
    {
        src: "/FrenchBayKwilaDeck.jpg",
        alt: "French Bay Kwila Deck",
        title: "French Bay",
        description: "Kwila Deck Installation"
    },
    {
        src: "/WaiataruaNewFence-gate.jpg",
        alt: "New Fence and Gate in Waiatarua",
        title: "Waiatarua",
        description: "Custom Fence and Gate"
    }
];

// Update the sequences array to include the Avondale client satisfaction photo
const sequences = [
    ['BeforeRenovation.jpg', 'AfterRenovation.jpg'],
    ['Avondale-Stairs-Deck-1.jpg', 'Avondale-Stairs-Deck-2.jpg', 'HappyClientsInAvondale.jpg'],  // Added the Avondale client photo
    ['PoleFoundationsToLiftAHouseOnto.jpg', 'HouseBeingLiftedOntoOurPoleFoundations.jpg', 'HouseInPlace.jpg'],
    ['Before-NewBathroomInNewLynn.jpg', 'After-NewBathroomInNewLynn.jpg'],
    ['Before-MountEden.jpg', 'After-MountEden.jpg'],
    ['BeforeAlumniumFence.jpg', 'AfterAlumniumFence.jpg']
];

// Add this after the sequences array
const sequenceColors = {
    0: { from: '#4a90e2', to: '#357abd' },    // Blue for first pair
    1: { from: '#e24a4a', to: '#bd3535' },    // Red for second pair
    2: { from: '#4ae24a', to: '#35bd35' },    // Green for third sequence
    3: { from: '#e2a44a', to: '#bd8a35' },    // Orange for fourth pair
    4: { from: '#9b4ae2', to: '#7935bd' },    // Purple for fifth pair
    5: { from: '#e24a9b', to: '#bd357d' }     // Pink for sixth pair
};

// Sort images to keep related ones together
const sortImages = (images) => {
    const result = [];
    const used = new Set();
    
    // First add all sequence images in order
    sequences.forEach(sequence => {
        sequence.forEach(filename => {
            const image = images.find(img => 
                img.src.split('/').pop()?.toLowerCase() === filename.toLowerCase()
            );
            if (image && !used.has(image.src)) {
                result.push(image);
                used.add(image.src);
            }
        });
    });
    
    // Then add remaining images
    images.forEach(image => {
        if (!used.has(image.src)) {
            result.push(image);
        }
    });
    
    return result;
};

const sortedImages = sortImages(images);

// Add this at the top of your frontmatter
const currentPath = Astro.url.pathname;
---

<Layout title="Project Gallery - Draft & Build">
    <NavBar currentPath={currentPath} />
    
    <main class="min-h-screen bg-gradient-to-br from-white via-gray-50 to-gray-100 pt-32 pb-16 px-4">
        <div class="max-w-7xl mx-auto">
            <div class="text-center mb-16 relative">
                {/* Background accent */}
                <div class="absolute inset-x-0 top-1/2 -translate-y-1/2 h-[150%] bg-gradient-to-r from-[#004225]/5 via-white to-[#004225]/5"></div>
                
                {/* Title container */}
                <div class="relative inline-flex items-center">
                    {/* Left decorative element */}
                    <div class="absolute -left-12 top-1/2 -translate-y-1/2">
                        <div class="w-8 h-[2px] bg-gradient-to-r from-[#004225] to-transparent"></div>
                        <div class="w-6 h-[2px] bg-gradient-to-r from-[#004225]/50 to-transparent mt-1"></div>
                        <div class="w-4 h-[2px] bg-gradient-to-r from-[#004225]/20 to-transparent mt-1"></div>
                    </div>

                    {/* Title */}
                    <h1 class="text-5xl font-bold px-16">
                        <span class="relative">
                            <span class="bg-clip-text text-transparent bg-gradient-to-r from-black to-black/90">Project</span>
                            <div class="absolute -bottom-2 left-0 w-full h-[1px] bg-gradient-to-r from-transparent via-black/20 to-transparent"></div>
                        </span>
                        <span class="relative ml-3">
                            <span class="bg-clip-text text-transparent bg-gradient-to-r from-[#004225] to-[#004225]/90">Gallery</span>
                            <div class="absolute -bottom-2 left-0 w-full h-[1px] bg-gradient-to-r from-transparent via-[#004225]/20 to-transparent"></div>
                        </span>
                    </h1>

                    {/* Right decorative element */}
                    <div class="absolute -right-12 top-1/2 -translate-y-1/2">
                        <div class="w-8 h-[2px] bg-gradient-to-l from-[#004225] to-transparent"></div>
                        <div class="w-6 h-[2px] bg-gradient-to-l from-[#004225]/50 to-transparent mt-1"></div>
                        <div class="w-4 h-[2px] bg-gradient-to-l from-[#004225]/20 to-transparent mt-1"></div>
                    </div>
                </div>

                {/* Subtitle */}
                <div class="relative mt-6">
                    <p class="text-black/80 text-lg">Showcasing Our Finest Work and Craftsmanship</p>
                    <div class="absolute bottom-0 left-1/2 -translate-x-1/2 w-24 h-[1px] bg-gradient-to-r from-transparent via-[#004225]/30 to-transparent"></div>
                </div>
            </div>

            <!-- Gallery Grid -->
            <div class="masonry-gallery max-w-[1400px] mx-auto px-4" id="gallery">
                {sortedImages.map((image, index) => {
                    const currentName = image.src.split('/').pop()?.toLowerCase() || '';
                    const sequenceIndex = sequences.findIndex(seq => 
                        seq.map(img => img.toLowerCase()).includes(currentName)
                    );
                    const isInSequence = sequenceIndex !== -1;
                    const viewNumber = isInSequence ? sequences[sequenceIndex].findIndex(img => 
                        img.toLowerCase() === currentName
                    ) + 1 : null;

                    return (
                        <div class="gallery-item break-inside-avoid mb-4 hover:transform hover:scale-[1.02] transition-all duration-300">
                            <div class="relative group rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300">
                                {/* Number badge */}
                                <div class={`absolute top-2 right-2 z-10 w-8 h-8 flex items-center justify-center rounded-full 
                                    ${isInSequence ? `number-badge-${sequenceIndex}` : 'bg-black/50'}`}>
                                    <span class="text-white text-sm font-bold">{index + 1}</span>
                                </div>

                                {/* View indicator for sequence items */}
                                {isInSequence && (
                                    <div class="absolute top-12 right-2 z-10 px-2 py-1 rounded-md bg-black/50">
                                        <span class="text-white text-xs">View {viewNumber}</span>
                                    </div>
                                )}

                                <img 
                                    src={image.src}
                                    alt={image.alt}
                                    class={`w-full object-cover transition-transform duration-700 group-hover:scale-110 ${
                                        // Vary heights based on image index or content type
                                        index % 3 === 0 ? 'h-[350px]' : 
                                        index % 3 === 1 ? 'h-[400px]' : 'h-[300px]'
                                    }`}
                                    loading="lazy"
                                    onerror="this.src='https://via.placeholder.com/400x280?text=Image+Not+Found'"
                                />
                                <!-- Rest of the existing image overlay -->
                                <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                    <div class="absolute bottom-0 left-0 right-0 p-4 text-white">
                                        <h3 class="font-bold">{image.title}</h3>
                                        <p class="text-sm">{image.description}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    );
                })}
            </div>

            <!-- Modal -->
            <div id="imageModal" class="fixed inset-0 bg-neutral-900/75 backdrop-blur-xl z-[1000] hidden">
                <div class="absolute inset-0 flex items-center justify-center p-8" id="modalOverlay">
                    <div class="relative">
                        <img 
                            id="modalImage" 
                            src="" 
                            alt="" 
                            class="w-auto h-auto max-w-[90vw] max-h-[85vh] object-contain min-h-[300px] min-w-[300px]"
                        />
                        <button 
                            id="closeModal" 
                            class="absolute top-1 right-1 z-[1001] bg-black/50 hover:bg-[#004225] p-2 rounded-full transition-all duration-300"
                            aria-label="Close modal"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Return Home Button -->
            <div class="text-center mt-16 animate-fade-in" style="animation-delay: 1000ms;">
                <a href="/" class="inline-flex items-center px-8 py-4 text-lg font-medium text-white bg-[#004225] hover:bg-[#004225]/90 rounded-2xl transition-all duration-500 shadow-lg hover:shadow-xl hover:shadow-[#004225]/20 transform hover:-translate-y-1 hover:scale-105">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 transition-transform duration-300 group-hover:-translate-x-1" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                    </svg>
                    Return Home
                </a>
            </div>
        </div>
    </main>

    <Footer />
</Layout>

<style>
    .masonry-gallery {
        column-count: 1;
        column-gap: 2rem;
        padding-bottom: 2rem; /* Add padding to bottom */
    }

    @media (min-width: 640px) {
        .masonry-gallery {
            column-count: 2;
        }
    }

    @media (min-width: 768px) {
        .masonry-gallery {
            column-count: 3;
        }
    }

    .gallery-item {
        display: inline-block;
        width: 100%;
        margin-bottom: 2rem;
        opacity: 0;
        animation: floatIn 0.8s cubic-bezier(0.23, 1, 0.32, 1) forwards;
        break-inside: avoid-column;
    }

    .gallery-item > div {
        position: relative;
        overflow: hidden;
        transform: translateZ(0);
    }

    .gallery-item > div::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
            90deg,
            rgba(255, 255, 255, 0) 0%,
            rgba(255, 255, 255, 0.1) 50%,
            rgba(255, 255, 255, 0) 100%
        );
        z-index: 1;
        transform: translateX(-100%);
        transition: transform 0.6s ease-out;
    }

    .gallery-item:hover > div::before {
        transform: translateX(100%);
    }

    .gallery-item img {
        transform: scale(1.01);
        transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
        filter: brightness(0.95);
    }

    .gallery-item:hover img {
        transform: scale(1.08);
        filter: brightness(1.05);
    }

    .gallery-item:nth-child(3n + 1) { animation-delay: 100ms; }
    .gallery-item:nth-child(3n + 2) { animation-delay: 300ms; }
    .gallery-item:nth-child(3n + 3) { animation-delay: 500ms; }

    .gallery-item .group:hover .absolute {
        opacity: 1;
    }

    /* Number badge colors - updated for maximum contrast with white text */
    .number-badge-0 {
        background: linear-gradient(45deg, #1e40af, #1e3a8a); /* Darker blue */
    }

    .number-badge-1 {
        background: linear-gradient(45deg, #991b1b, #7f1d1d); /* Darker red */
    }

    .number-badge-2 {
        background: linear-gradient(45deg, #065f46, #064e3b); /* Darker green */
    }

    .number-badge-3 {
        background: linear-gradient(45deg, #5b21b6, #4c1d95); /* Darker purple */
    }

    .number-badge-4 {
        background: linear-gradient(45deg, #9a3412, #7c2d12); /* Darker orange */
    }

    .number-badge-5 {
        background: linear-gradient(45deg, #9d174d, #831843); /* Darker pink */
    }

    /* Enhance number visibility */
    [class*="number-badge-"] {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    /* Make the number text more visible */
    [class*="number-badge-"] span {
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        font-weight: 700;
    }

    #imageModal {
        transition: all 0.4s ease-out;
    }

    #modalImage {
        transition: all 0.4s ease-out;
        filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
    }

    .modal-open {
        animation: modalEntrance 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    .backdrop-blur-xl {
        backdrop-filter: blur(28px);
    }

    /* Add these new animations and styles */
    @keyframes floatIn {
        0% {
            opacity: 0;
            transform: translateY(40px) scale(0.95);
        }
        50% {
            opacity: 0.5;
            transform: translateY(-10px) scale(0.98);
        }
        100% {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    @keyframes shimmer {
        0% {
            background-position: -1000px 0;
        }
        100% {
            background-position: 1000px 0;
        }
    }

    .gallery-item {
        animation: floatIn 0.8s cubic-bezier(0.23, 1, 0.32, 1) forwards;
        opacity: 0;
    }

    .gallery-item > div {
        position: relative;
        overflow: hidden;
        transform: translateZ(0);
    }

    .gallery-item > div::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
            90deg,
            rgba(255, 255, 255, 0) 0%,
            rgba(255, 255, 255, 0.1) 50%,
            rgba(255, 255, 255, 0) 100%
        );
        z-index: 1;
        transform: translateX(-100%);
        transition: transform 0.6s ease-out;
    }

    .gallery-item:hover > div::before {
        transform: translateX(100%);
    }

    .gallery-item img {
        transform: scale(1.01);
        transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
        filter: brightness(0.95);
    }

    .gallery-item:hover img {
        transform: scale(1.08);
        filter: brightness(1.05);
    }

    /* Staggered animations with different delays */
    .gallery-item:nth-child(3n + 1) { animation-delay: 100ms; }
    .gallery-item:nth-child(3n + 2) { animation-delay: 300ms; }
    .gallery-item:nth-child(3n + 3) { animation-delay: 500ms; }

    /* Enhanced modal animations */
    .modal-open {
        animation: modalEntrance 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    @keyframes modalEntrance {
        0% {
            opacity: 0;
            transform: scale(0.8) translateY(40px);
        }
        100% {
            opacity: 1;
            transform: scale(1) translateY(0);
        }
    }

    /* Hover effect for the close button */
    #closeModal {
        transform: rotate(0deg);
        transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    #closeModal:hover {
        transform: rotate(90deg);
        background-color: rgba(0, 66, 37, 0.9);
    }

    /* Enhanced number badge styles */
    [class*="number-badge-"] {
        transform: scale(1);
        transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    .gallery-item:hover [class*="number-badge-"] {
        transform: scale(1.1);
    }

    /* Image overlay animation */
    .gallery-item .absolute {
        transform: translateY(10px);
        transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
    }

    .gallery-item:hover .absolute {
        transform: translateY(0);
    }
</style>

<script>
    const gallery = document.querySelector('.masonry-gallery');
    const modal = document.getElementById('imageModal');
    const modalOverlay = document.getElementById('modalOverlay');
    const modalImg = document.getElementById('modalImage') as HTMLImageElement;
    const closeBtn = document.getElementById('closeModal');

    // Open modal handler - updated to handle clicks on image or overlay
    document.addEventListener('click', (e) => {
        const target = e.target as HTMLElement;
        
        // Check if clicked element is an image or its container
        if (target.tagName === 'IMG' || target.closest('.gallery-item')) {
            const galleryItem = target.closest('.gallery-item');
            const img = galleryItem?.querySelector('img');
            
            if (img && modalImg && modal) {
                modalImg.src = img.src;
                modalImg.alt = img.alt;
                modal.classList.remove('hidden');
                modalImg.classList.add('modal-open');
                document.body.style.overflow = 'hidden';
            }
        }
        
        // Check if clicked element is the modal overlay or close button
        if (target === modalOverlay || target === closeBtn || target.closest('#closeModal')) {
            closeModal();
        }
    });

    // Close modal function
    const closeModal = () => {
        if (modal && modalImg) {
            modalImg.classList.remove('modal-open');
            modal.classList.add('hidden');
            document.body.style.overflow = '';
        }
    };

    // Close on escape key
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            closeModal();
        }
    });
</script> 